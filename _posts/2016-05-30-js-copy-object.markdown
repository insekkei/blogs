---
layout: post
title:  "一个copy对象的诡异😂问题"
date:   2016-05-30 16:05
categories: js object
---

遇到一个诡异的问题，简单写成代码如下：

    > var o = [{a: 1}, {a: 2}, {a: 3}]; var o2 = o; var o3 = o; o2.splice(0, 1); o3;
    < [Object, Object]

真实的数据结构比这个复杂一些...<!--more-->

copy出o3的本意是，保存一个副本以便与o2经过各种操作后进行比较。然而每次遍历取o3里值组成一个简单数组时，总会发现，o3跟着o2动了...

too young too simple的我以为这是灵异事件...而忘了“世界上没有无缘无故的bug”这句话（嗯，这句话也是我总结出来的...）。

于是，我把代码逻辑改成了如下形式：
    
    > var o = [{a: 1}, {a: 2}, {a: 3}]; var o2 = o; var o3 = o.map(item => item.a); o2.splice(0,1); o3;
    < [1, 2, 3]

直接保存成一个目标数组了...

问题虽然解决了，可是为什么o3会跟着o2动呢？

有一天组里的小伙伴抛了一个问题在群里：

    var o = { 
        a: {
            b: 2
        }
    }; 
    var o2 = o;
    o = 1;
    问：o2是什么？

我根据上次的经验，想也不想，回答：1

然而在控制台试了下，是 Object {a: Object}...

看了其他小伙伴的回复，再查了下，原来，`=` 操作符中，对象和数组是引用，字符串数字才是副本...也就是说，o2，o3指向的是同一个地址，只是名字不一样而已...

我又恍惚地记起了一些面试题，slice复制数组什么的...object.assign什么的...

看来实践需要配合理论啊...
